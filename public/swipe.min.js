const touchSupported = "ontouchstart" in document.documentElement, newQuestionSwipeEvent = new Event("newQuestionEvent"); if (touchSupported) { let currTopCard, newTopCard; function init() { currTopCard = $(".q-container.draggable"), newTopCard = $(".q-container:not(.draggable)"), currTopCard.addEventListener("touchstart", start), currTopCard.addEventListener("touchmove", move), currTopCard.addEventListener("touchend", end) } init(); let startingY = newY = 0; function start(e) { currTopCard.style.transition = "", startingY = newY = e.touches[0].clientY, currTopCard.style.filter = "brightness(0.95)", newTopCard.style.opacity = 1 } function move(e) { newY = e.touches[0].clientY; let change = startingY - newY; change <= 0 || (change = change / window.innerHeight * 100, currTopCard.style.transform = `translate(-50%, ${-50 - change}%) scale(${1 - .005 * change})`, newTopCard.style.setProperty("--after-opacity", `${change / 100}`)) } function end(e) { if (startingY - newY < window.innerHeight / 6) currTopCard.style.transition = "transform 0.1s", currTopCard.style.transform = "translate(-50%, -50%)", currTopCard.style.opacity = 1, currTopCard.style.filter = "", newTopCard.style.setProperty("--after-opacity", "0"); else { function transition() { currTopCard.classList.remove("draggable", "flyaway"), currTopCard.style.opacity = 0, currTopCard.style.filter = "", currTopCard.removeEventListener("touchstart", start), currTopCard.removeEventListener("touchmove", move), currTopCard.removeEventListener("touchend", end), currTopCard.removeEventListener("transitionend", transition), init() } document.dispatchEvent(newQuestionSwipeEvent), currTopCard.style.transform = "", currTopCard.classList.add("flyaway"), newTopCard.style.opacity = 1, newTopCard.classList.add("draggable"), newTopCard.style.setProperty("--after-opacity", "1"), currTopCard.addEventListener("transitionend", transition) } } }